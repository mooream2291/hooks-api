{"ast":null,"code":"var _jsxFileName = \"/Users/ashleymoore/Documents/codefellows/code401/lab-31/hooks-api/src/components/todo/login.js\";\nimport React, { useContext, useState } from 'react';\nimport { LoginContext } from './context'; // perhaps I should make some context to keep track of people logging in and out\n// this should just be a form\n\nfunction Login(props) {\n  const [username, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const loginContext = useContext(LoginContext);\n\n  const handleSubmit = e => {\n    e.preventDefault(); // send username and password to context\n\n    loginContext.login(username, password);\n  };\n\n  const handleNameChange = e => {\n    setUserName(e.target.value);\n  };\n\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleNameChange,\n    type: \"text\",\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handlePasswordChange,\n    type: \"password\",\n    name: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Sign In\"));\n}\n\nexport default Login; //THE STATE IS GOING TO UPDATE ASYNCHRONOUSLY\n//PUT NA ONCHANGE IN THE INPUT AND UPDATE IT AS WE GO","map":{"version":3,"sources":["/Users/ashleymoore/Documents/codefellows/code401/lab-31/hooks-api/src/components/todo/login.js"],"names":["React","useContext","useState","LoginContext","Login","props","username","setUserName","password","setPassword","loginContext","handleSubmit","e","preventDefault","login","handleNameChange","target","value","handlePasswordChange"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAASC,YAAT,QAA6B,WAA7B,C,CAEA;AACA;;AAGA,SAASC,KAAT,CAAeC,KAAf,EAAqB;AACnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMQ,YAAY,GAAGT,UAAU,CAACE,YAAD,CAA/B;;AAEA,QAAMQ,YAAY,GAAGC,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF,GADwB,CAExB;;AACAH,IAAAA,YAAY,CAACI,KAAb,CAAmBR,QAAnB,EAA6BE,QAA7B;AACD,GAJD;;AAMA,QAAMO,gBAAgB,GAAIH,CAAD,IAAO;AAC9BL,IAAAA,WAAW,CAACK,CAAC,CAACI,MAAF,CAASC,KAAV,CAAX;AACD,GAFD;;AAIA,QAAMC,oBAAoB,GAAIN,CAAD,IAAO;AAClCH,IAAAA,WAAW,CAACG,CAAC,CAACI,MAAF,CAASC,KAAV,CAAX;AACD,GAFD;;AAIA,sBACE;AAAM,IAAA,QAAQ,EAAEN,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,QAAQ,EAAEI,gBAAjB;AAAmC,IAAA,IAAI,EAAC,MAAxC;AAA+C,IAAA,IAAI,EAAC,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAO,IAAA,QAAQ,EAAEG,oBAAjB;AAAuC,IAAA,IAAI,EAAC,UAA5C;AAAuD,IAAA,IAAI,EAAC,UAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CADF;AAOD;;AAED,eAAed,KAAf,C,CAEA;AACA","sourcesContent":["import React, {useContext, useState} from 'react';\nimport { LoginContext } from './context';\n\n// perhaps I should make some context to keep track of people logging in and out\n// this should just be a form\n\n\nfunction Login(props){\n  const [username, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n\n  const loginContext = useContext(LoginContext);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // send username and password to context\n    loginContext.login(username, password);\n  }\n\n  const handleNameChange = (e) => {\n    setUserName(e.target.value);\n  }\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  }\n\n  return(\n    <form onSubmit={handleSubmit}>\n      <input onChange={handleNameChange} type=\"text\" name=\"name\" />\n      <input onChange={handlePasswordChange} type=\"password\" name=\"password\" />\n      <button>Sign In</button>\n    </form>\n  )\n}\n\nexport default Login;\n\n//THE STATE IS GOING TO UPDATE ASYNCHRONOUSLY\n//PUT NA ONCHANGE IN THE INPUT AND UPDATE IT AS WE GO"]},"metadata":{},"sourceType":"module"}