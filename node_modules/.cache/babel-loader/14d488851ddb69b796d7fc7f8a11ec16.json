{"ast":null,"code":"var _jsxFileName = \"/Users/ashleymoore/Documents/codefellows/code401/lab-31/hooks-api/src/components/todo/auth.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport { LoginContext } from './context'; // Auth is going to tap into LoginContext and check if the user is logged in\n// Auth will get a props of capability to see what it will show the user\n\nfunction Auth(props) {\n  const [okToRender, setOkToRender] = useState(false);\n  const loginContext = useContext(LoginContext);\n  useEffect(() => {\n    console.log('loginContext', loginContext);\n    setOkToRender(loginContext.loggedIn && (props.capability ? loginContext.user.capabilities.includes(props.capability) : false));\n  }, [loginContext.loggedIn, props.capability]);\n  console.log(okToRender, loginContext.loggedIn);\n  return okToRender && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, props.children);\n} // okToRender ? 'do this thing ' : ''\n// okToRender && 'do this thing'\n\n\nexport default Auth;","map":{"version":3,"sources":["/Users/ashleymoore/Documents/codefellows/code401/lab-31/hooks-api/src/components/todo/auth.js"],"names":["React","useEffect","useState","useContext","LoginContext","Auth","props","okToRender","setOkToRender","loginContext","console","log","loggedIn","capability","user","capabilities","includes","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAAQC,YAAR,QAA2B,WAA3B,C,CAEA;AACA;;AAGA,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAClB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAMO,YAAY,GAAGN,UAAU,CAACC,YAAD,CAA/B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,YAA5B;AACAD,IAAAA,aAAa,CACXC,YAAY,CAACG,QAAb,KAA0BN,KAAK,CAACO,UAAN,GAAmBJ,YAAY,CAACK,IAAb,CAAkBC,YAAlB,CAA+BC,QAA/B,CAAwCV,KAAK,CAACO,UAA9C,CAAnB,GAA+E,KAAzG,CADW,CAAb;AAGD,GALQ,EAKN,CAACJ,YAAY,CAACG,QAAd,EAAuBN,KAAK,CAACO,UAA7B,CALM,CAAT;AAOAH,EAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ,EAAwBE,YAAY,CAACG,QAArC;AAEA,SACEL,UAAU,iBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMD,KAAK,CAACW,QAAZ,CAFJ;AAID,C,CAED;AACA;;;AAEA,eAAeZ,IAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport {LoginContext} from './context';\n\n// Auth is going to tap into LoginContext and check if the user is logged in\n// Auth will get a props of capability to see what it will show the user\n\n\nfunction Auth(props){\n  const [okToRender, setOkToRender] = useState(false);\n  const loginContext = useContext(LoginContext);\n\n  useEffect(() => {\n    console.log('loginContext', loginContext)\n    setOkToRender(\n      loginContext.loggedIn && (props.capability ? loginContext.user.capabilities.includes(props.capability) : false)\n    )\n  }, [loginContext.loggedIn,props.capability])\n\n  console.log(okToRender, loginContext.loggedIn)\n\n  return(\n    okToRender &&\n      <div>{props.children}</div>\n  )\n}\n\n// okToRender ? 'do this thing ' : ''\n// okToRender && 'do this thing'\n\nexport default Auth;"]},"metadata":{},"sourceType":"module"}