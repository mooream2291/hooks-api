{"ast":null,"code":"var _jsxFileName = \"/Users/ashleymoore/Documents/codefellows/code401/lab-31/hooks-api/src/components/todo/todo.js\";\nimport React from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport { useState, useEffect } from 'react';\nimport './todo.scss';\n\nconst ToDo = () => {\n  const [count, setCount] = useState();\n  const [list, setList] = useState([{\n    _id: 1,\n    complete: false,\n    text: 'Clean the Kitchen',\n    difficulty: 3,\n    assignee: 'Person A'\n  }, {\n    _id: 2,\n    complete: false,\n    text: 'Do the Laundry',\n    difficulty: 2,\n    assignee: 'Person A'\n  }, {\n    _id: 3,\n    complete: false,\n    text: 'Walk the Dog',\n    difficulty: 4,\n    assignee: 'Person B'\n  }, {\n    _id: 4,\n    complete: true,\n    text: 'Do Homework',\n    difficulty: 3,\n    assignee: 'Person C'\n  }, {\n    _id: 5,\n    complete: false,\n    text: 'Take a Nap',\n    difficulty: 1,\n    assignee: 'Person B'\n  }]);\n\n  const _addItem = item => {\n    item._id = Math.random();\n    item.complete = false;\n    this.setList([...list, item]);\n  };\n\n  const _toggleComplete = id => {\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      setList(list.map(listItem => listItem._id === item._id ? item : listItem));\n    }\n  }; // useEffect(() => {\n  //   setCount(list.filter(item => !item.complete).length);\n  // }, [list]);\n  // useEffect(() => {\n  //   document.title = `todo list: (${count})`;\n  // }, [count]);\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"There are \", setCount, \" Items To Complete\")), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TodoForm, {\n    handleSubmit: _addItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TodoList // change this.state.list\n  , {\n    list: list // change this.toggleComplete\n    ,\n    handleComplete: _toggleComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default ToDo;","map":{"version":3,"sources":["/Users/ashleymoore/Documents/codefellows/code401/lab-31/hooks-api/src/components/todo/todo.js"],"names":["React","TodoForm","TodoList","useState","useEffect","ToDo","count","setCount","list","setList","_id","complete","text","difficulty","assignee","_addItem","item","Math","random","_toggleComplete","id","filter","i","map","listItem"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport { useState, useEffect } from 'react';\nimport './todo.scss';\n\nconst ToDo = () => {\n  const [count, setCount] = useState();\n\n  const [list, setList] = useState([\n    { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A' },\n    { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A' },\n    { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B' },\n    { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C' },\n    { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B' },\n  ])\n\n\n  const _addItem = (item) => {\n    item._id = Math.random();\n    item.complete = false;\n    this.setList([...list, item]);\n  };\n\n  const _toggleComplete = (id) => {\n\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      setList(list.map(listItem => listItem._id === item._id ? item : listItem));\n    }\n\n  };\n\n  // useEffect(() => {\n  //   setCount(list.filter(item => !item.complete).length);\n  // }, [list]);\n\n  // useEffect(() => {\n  //   document.title = `todo list: (${count})`;\n  // }, [count]);\n\n\n  return (\n    <>\n      <header>\n        <h2>\n          There are {setCount} Items To Complete\n          </h2>\n      </header>\n        <section className=\"todo\">\n          <div>\n            {/* change this.addItem */}\n            <TodoForm handleSubmit={_addItem} />\n          </div>\n\n          <div>\n            <TodoList\n              // change this.state.list\n              list={list}\n              // change this.toggleComplete\n              handleComplete={_toggleComplete}\n            />\n          </div>\n        </section>\n    </>\n  );\n}\n\nexport default ToDo;"]},"metadata":{},"sourceType":"module"}