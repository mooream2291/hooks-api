{"ast":null,"code":"var _jsxFileName = \"/Users/ashleymoore/Documents/codefellows/code401/lab-31/hooks-api/src/components/todo/form.js\";\nimport React, { useEffect, useState } from 'react';\n\nconst TodoForm = props => {\n  const [item, setItem] = useState[{}];\n\n  const handleInputChange = e => {\n    setItem({ ...item,\n      [e.target.name]: e.target.value\n    });\n  }; // useEffect (() => {\n  //  console.log('yooooooooooooo Im here', item);\n  // }, [item]);\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    e.target.reset(); //colon is else\n\n    let send = item.text && item.difficulty && item.assignee ? true : false;\n    send && props.handleSubmit(item); // reseting form fields to an empty object\n\n    setItem({});\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Add Item\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"To Do Item\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"text\",\n    placeholder: \"Add To Do List Item\" // onChange={ handleInputChange }\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Difficulty Rating\"), /*#__PURE__*/React.createElement(\"input\", {\n    defaultValue: \"1\",\n    type: \"range\",\n    min: \"1\",\n    max: \"5\",\n    name: \"difficulty\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Assigned To\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"assignee\",\n    placeholder: \"Assigned To\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    \"data-testid\": \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Add Item\")));\n};\n\nexport default TodoForm;","map":{"version":3,"sources":["/Users/ashleymoore/Documents/codefellows/code401/lab-31/hooks-api/src/components/todo/form.js"],"names":["React","useEffect","useState","TodoForm","props","item","setItem","handleInputChange","e","target","name","value","handleSubmit","preventDefault","reset","send","text","difficulty","assignee"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAExB,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMK,iBAAiB,GAAGC,CAAC,IAAI;AAC/BF,IAAAA,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAU,OAACG,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAApC,KAAD,CAAP;AACD,GAFC,CAJwB,CAQ1B;AACA;AACA;;;AAEF,QAAMC,YAAY,GAAIJ,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACK,cAAF;AACAL,IAAAA,CAAC,CAACC,MAAF,CAASK,KAAT,GAFwB,CAGxB;;AACA,QAAIC,IAAI,GAAIV,IAAI,CAACW,IAAL,IAAaX,IAAI,CAACY,UAAlB,IAAgCZ,IAAI,CAACa,QAAtC,GAAgD,IAAhD,GAAqD,KAAhE;AACAH,IAAAA,IAAI,IAAIX,KAAK,CAACQ,YAAN,CAAmBP,IAAnB,CAAR,CALwB,CAMxB;;AACAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GARH;;AAUI,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,IAAA,QAAQ,EAAGM,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,qBAFd,CAGE;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAO,IAAA,YAAY,EAAC,GAApB;AAAwB,IAAA,IAAI,EAAC,OAA7B;AAAqC,IAAA,GAAG,EAAC,GAAzC;AAA6C,IAAA,GAAG,EAAC,GAAjD;AAAqD,IAAA,IAAI,EAAC,YAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CATF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,UAAxB;AAAmC,IAAA,WAAW,EAAC,aAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAdF,eAmBE;AAAQ,IAAA,IAAI,EAAG,QAAf;AAAwB,mBAAc,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBF,CAFF,CADF;AA0BD,CAhDH;;AAkDA,eAAeT,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\n\nconst TodoForm = (props) => {\n\n    const [ item, setItem ] = useState[{}];\n\n    const handleInputChange = e => {\n    setItem({...item, [e.target.name]: e.target.value });\n  };\n\n  // useEffect (() => {\n  //  console.log('yooooooooooooo Im here', item);\n  // }, [item]);\n\nconst handleSubmit = (e) => {\n    e.preventDefault();\n    e.target.reset();\n    //colon is else\n    let send = (item.text && item.difficulty && item.assignee)?true:false\n    send && props.handleSubmit(item);\n    // reseting form fields to an empty object\n    setItem({});\n  };\n\n    return (\n      <>\n        <h3>Add Item</h3>\n        <form onSubmit={ handleSubmit }>\n          <label>\n            <span>To Do Item</span>\n            <input\n              name=\"text\"\n              placeholder=\"Add To Do List Item\"\n              // onChange={ handleInputChange }\n            />\n          </label>\n          <label>\n            <span>Difficulty Rating</span>\n            <input defaultValue=\"1\" type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\"/>\n            {/* onChange={ handleInputChange }  */}\n          </label>\n          <label>\n            <span>Assigned To</span>\n            <input type=\"text\" name=\"assignee\" placeholder=\"Assigned To\"/>\n            {/* onChange={ handleInputChange }  */}\n          </label>\n          <button type = \"submit\" data-testid = \"submit\" >Add Item</button>\n        </form>\n      </>\n    );\n  }\n\nexport default TodoForm;"]},"metadata":{},"sourceType":"module"}